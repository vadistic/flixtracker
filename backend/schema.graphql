# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Auth {
  """JWT access token"""
  accessToken: String!

  """JWT refresh token"""
  refreshToken: String!
  user: User!
}

type Comment {
  authorId: ID!
  content: String!

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  id: ID!
  movie: Movie!
  movieId: ID!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

input CommentCreateInput {
  content: String!
  movieId: ID!
}

input CommentFilterInput {
  content: String
  movieId: String
}

input CommentIdInput {
  commentId: ID!
}

enum CommentOrderBy {
  createdAt
}

input CommentOrderInput {
  direction: OrderDirection
  orderBy: CommentOrderBy
}

input CommentUpdateInput {
  content: String!
}

"""Date & time scalar type"""
scalar DateTime

input LoginInput {
  email: String!
  password: String!
}

type Movie {
  actors: String
  awards: String
  boxOffice: String
  comments: [Comment!]!
  country: [String!]!

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  director: String
  dvd: String
  genre: [String!]!
  id: ID!
  imdbID: String
  imdbRating: Float
  imdbVotes: Int
  language: [String!]!
  metascore: Int
  plot: String
  poster: String
  production: String
  rated: String
  ratings: [Rating!]!
  released: DateTime
  runtime: String
  title: String!
  type: MovieType!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
  website: String
  writer: String
  year: Int!
}

input MovieCreateInput {
  actors: String
  awards: String
  boxOffice: String
  country: [String!]
  director: String
  dvd: String
  genre: [String!]
  imdbRating: Float
  imdbVotes: Int
  language: [String!]
  metascore: Int
  plot: String
  poster: String
  production: String
  rated: String
  released: DateTime
  runtime: String
  title: String!
  type: MovieType
  website: String
  writer: String
  year: Int
}

input MovieIdInput {
  movieId: ID!
}

enum MovieOrderBy {
  country
  createdAt
  imdbRating
  imdbVotes
  title
  type
  year
}

input MovieOrderInput {
  direction: OrderDirection
  orderBy: MovieOrderBy
}

input MoviesFilterInput {
  imdbID: String
  title: String
  type: MovieType
  year: Int
}

enum MovieType {
  EPISODE
  MOVIE
  SERIES
}

input MovieUpdateInput {
  actors: String
  awards: String
  boxOffice: String
  country: [String!]
  director: String
  dvd: String
  genre: [String!]
  imdbRating: Float
  imdbVotes: Int
  language: [String!]
  metascore: Int
  plot: String
  poster: String
  production: String
  rated: String
  released: DateTime
  runtime: String
  title: String
  type: MovieType
  website: String
  writer: String
  year: Int
}

type Mutation {
  createComment(data: CommentCreateInput!): Comment
  createMovie(data: MovieCreateInput!): Movie
  deleteComment(where: CommentIdInput!): Comment
  deleteMovie(where: MovieIdInput!): Movie
  login(data: LoginInput!): Auth!
  refreshToken(data: RefreshInput!): String!
  resetPasswordConfirm(data: ResetPasswordConfirmInput!): Auth!
  resetPasswordRequest(data: ResetPasswordRequestInput!): String!
  signup(data: SignupInput!): Auth!
  updateComment(data: CommentUpdateInput!, where: CommentIdInput!): Comment
  updateMovie(data: MovieUpdateInput!, where: MovieIdInput!): Movie
  updateUser(data: UpdateUserInput!): User!
  verifyEmailConfirm(data: VerifyEmailConfirmInput!): Auth!
  verifyEmailRequest(data: VerifyEmailRequestInput!): String!
}

"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  asc
  desc
}

type Query {
  comment(where: CommentIdInput!): Comment
  comments(cursor: String, order: CommentOrderInput!, skip: Int, take: Int, where: CommentFilterInput): [Comment!]!
  me: User!
  movie(where: MovieIdInput!): Movie
  movies(cursor: String, order: MovieOrderInput!, skip: Int, take: Int, where: MoviesFilterInput): [Movie!]!
}

type Rating {
  source: String!
  value: String!
}

input RefreshInput {
  token: String!
}

input ResetPasswordConfirmInput {
  code: String!
  email: String!
  newPassword: String!
}

input ResetPasswordRequestInput {
  email: String!
}

input SignupInput {
  email: String!
  firstname: String
  lastname: String
  password: String!
}

input UpdateUserInput {
  firstname: String
  lastname: String
}

type User {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  email: String!
  firstname: String
  id: ID!
  lastname: String
  role: UserRole!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

"""User role"""
enum UserRole {
  ADMIN
  USER
}

input VerifyEmailConfirmInput {
  code: String!
  email: String!
}

input VerifyEmailRequestInput {
  email: String!
}
