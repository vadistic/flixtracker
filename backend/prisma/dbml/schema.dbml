//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table User {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  email String [unique, not null]
  auth StrategyType [not null]
  status UserStatus [not null]
  firstname String
  lastname String
  role UserRole [not null]
  emailCode String
  passwordCode String
  password String
  movies Movie
  comments Comment
}

Table Movie {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  title String [not null]
  imdbID String [unique, not null]
  year Int [not null]
  type MovieType [not null]
  ratings Json [not null]
  language String
  country String
  genre String
  poster String
  rated String
  released DateTime
  runtime String
  director String
  writer String
  actors String
  plot String
  awards String
  metascore Int [not null]
  imdbRating Float [not null]
  imdbVotes Int [not null]
  dvd String
  boxOffice String
  production String
  website String
  users User
  comments Comment
}

Table Comment {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  content String
  author User [not null]
  authorId String [not null]
  movie Movie [not null]
  movieId String [not null]
}

Table MovieAbstract {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  title String [not null]
  imdbID String [unique, not null]
  year Int [not null]
  type MovieType [not null]
  poster String
}

Table MovieToUser {
  moviesId String [ref: > Movie.id]
  usersId String [ref: > User.id]
}

Enum StrategyType {
  LOCAL
  GOOGLE
}

Enum UserRole {
  ADMIN
  USER
}

Enum UserStatus {
  CONFIRMED
  UNCONFIRMED
  BANNED
}

Enum MovieType {
  MOVIE
  SERIES
  EPISODE
}

Ref: Comment.authorId > User.id

Ref: Comment.movieId > Movie.id